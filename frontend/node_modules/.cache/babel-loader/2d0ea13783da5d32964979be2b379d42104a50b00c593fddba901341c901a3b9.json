{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umair\\\\Music\\\\grammar-app\\\\frontend\\\\src\\\\components\\\\GrammarChecker.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport backendImg from '../backend.png';\nimport heroBg from '../herobg.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GrammarChecker() {\n  _s();\n  const [text, setText] = useState('');\n  const [corrections, setCorrections] = useState([]);\n  const [correctedSentence, setCorrectedSentence] = useState('');\n  const [noCorrections, setNoCorrections] = useState(false);\n  const handleCheckGrammar = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/check-grammar', {\n        text\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      // Split and filter out empty lines\n      const lines = response.data.corrections.split('\\n').map(l => l.trim()).filter(Boolean);\n      if (lines.length === 0 || lines[0] === 'No corrections needed') {\n        setNoCorrections(true);\n        setCorrections([]);\n        setCorrectedSentence('');\n      } else {\n        setNoCorrections(false);\n        setCorrectedSentence(lines[0]);\n        const correctionList = lines.slice(1).map(c => {\n          const [original, corrected] = c.split(' -> ');\n          return {\n            original: original === null || original === void 0 ? void 0 : original.trim(),\n            corrected: corrected === null || corrected === void 0 ? void 0 : corrected.trim()\n          };\n        }).filter(c => c.original && c.corrected);\n        setCorrections(correctionList);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Highlight incorrect words in the input text (preview) in bold red\n  const highlightInput = () => {\n    let highlighted = text;\n    corrections.forEach(({\n      original\n    }) => {\n      if (original) {\n        // Use word boundaries to only match the word\n        const regex = new RegExp(`\\\\b${original}\\\\b`, 'gi');\n        highlighted = highlighted.replace(regex, `<span style=\\\"color: red; font-weight: bold;\\\">${original}</span>`);\n      }\n    });\n    return highlighted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-cover bg-center relative\",\n    style: {\n      backgroundImage: `url(${heroBg})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden md:flex flex-col items-center justify-center mr-8 animate-float-spin\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: backendImg,\n        alt: \"Backend Animation\",\n        className: \"w-64 h-64 object-contain drop-shadow-2xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center p-4 w-full max-w-2xl bg-white bg-opacity-90 rounded-lg shadow-2xl z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"Grammar Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), corrections.length > 0 && !noCorrections && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full p-4 border rounded bg-white mb-2\",\n        dangerouslySetInnerHTML: {\n          __html: highlightInput()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        className: \"w-full h-40 p-4 border rounded mb-4\",\n        placeholder: \"Enter your text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheckGrammar,\n        className: \"bg-blue-500 text-white p-2 rounded hover:bg-blue-600 mb-4\",\n        children: \"Check Grammar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full p-4 border rounded bg-white min-h-[3rem]\",\n        children: noCorrections ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-600 font-semibold\",\n          children: \"No corrections needed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: correctedSentence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes float-spin {\n          0% { transform: translateY(0) rotate(0deg); }\n          50% { transform: translateY(-30px) rotate(10deg); }\n          100% { transform: translateY(0) rotate(0deg); }\n        }\n        .animate-float-spin {\n          animation: float-spin 4s ease-in-out infinite;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(GrammarChecker, \"XV+ENvVjTD7WIdUwbtFN3ydX2rM=\");\n_c = GrammarChecker;\nexport default GrammarChecker;\nvar _c;\n$RefreshReg$(_c, \"GrammarChecker\");","map":{"version":3,"names":["useState","axios","backendImg","heroBg","jsxDEV","_jsxDEV","GrammarChecker","_s","text","setText","corrections","setCorrections","correctedSentence","setCorrectedSentence","noCorrections","setNoCorrections","handleCheckGrammar","response","post","headers","Authorization","localStorage","getItem","lines","data","split","map","l","trim","filter","Boolean","length","correctionList","slice","c","original","corrected","err","console","error","highlightInput","highlighted","forEach","regex","RegExp","replace","className","style","backgroundImage","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umair/Music/grammar-app/frontend/src/components/GrammarChecker.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport backendImg from '../backend.png';\r\nimport heroBg from '../herobg.png';\r\n\r\nfunction GrammarChecker() {\r\n  const [text, setText] = useState('');\r\n  const [corrections, setCorrections] = useState([]);\r\n  const [correctedSentence, setCorrectedSentence] = useState('');\r\n  const [noCorrections, setNoCorrections] = useState(false);\r\n\r\n  const handleCheckGrammar = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:5000/check-grammar',\r\n        { text },\r\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }\r\n      );\r\n      // Split and filter out empty lines\r\n      const lines = response.data.corrections.split('\\n').map(l => l.trim()).filter(Boolean);\r\n      if (lines.length === 0 || lines[0] === 'No corrections needed') {\r\n        setNoCorrections(true);\r\n        setCorrections([]);\r\n        setCorrectedSentence('');\r\n      } else {\r\n        setNoCorrections(false);\r\n        setCorrectedSentence(lines[0]);\r\n        const correctionList = lines.slice(1).map(c => {\r\n          const [original, corrected] = c.split(' -> ');\r\n          return { original: original?.trim(), corrected: corrected?.trim() };\r\n        }).filter(c => c.original && c.corrected);\r\n        setCorrections(correctionList);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Highlight incorrect words in the input text (preview) in bold red\r\n  const highlightInput = () => {\r\n    let highlighted = text;\r\n    corrections.forEach(({ original }) => {\r\n      if (original) {\r\n        // Use word boundaries to only match the word\r\n        const regex = new RegExp(`\\\\b${original}\\\\b`, 'gi');\r\n        highlighted = highlighted.replace(\r\n          regex,\r\n          `<span style=\\\"color: red; font-weight: bold;\\\">${original}</span>`\r\n        );\r\n      }\r\n    });\r\n    return highlighted;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex items-center justify-center bg-cover bg-center relative\"\r\n      style={{ backgroundImage: `url(${heroBg})` }}\r\n    >\r\n      {/* Animated backend.png on the left */}\r\n      <div className=\"hidden md:flex flex-col items-center justify-center mr-8 animate-float-spin\">\r\n        <img\r\n          src={backendImg}\r\n          alt=\"Backend Animation\"\r\n          className=\"w-64 h-64 object-contain drop-shadow-2xl\"\r\n        />\r\n      </div>\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-col items-center p-4 w-full max-w-2xl bg-white bg-opacity-90 rounded-lg shadow-2xl z-10\">\r\n        <h2 className=\"text-2xl font-bold mb-6\">Grammar Checker</h2>\r\n        {/* Preview with incorrect words highlighted */}\r\n        {corrections.length > 0 && !noCorrections && (\r\n          <div\r\n            className=\"w-full p-4 border rounded bg-white mb-2\"\r\n            dangerouslySetInnerHTML={{ __html: highlightInput() }}\r\n          />\r\n        )}\r\n        <textarea\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          className=\"w-full h-40 p-4 border rounded mb-4\"\r\n          placeholder=\"Enter your text here...\"\r\n        />\r\n        <button\r\n          onClick={handleCheckGrammar}\r\n          className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600 mb-4\"\r\n        >\r\n          Check Grammar\r\n        </button>\r\n        <div\r\n          className=\"w-full p-4 border rounded bg-white min-h-[3rem]\"\r\n        >\r\n          {noCorrections ? (\r\n            <span className=\"text-green-600 font-semibold\">No corrections needed!</span>\r\n          ) : (\r\n            <span>{correctedSentence}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* Animation keyframes for floating and spinning */}\r\n      <style>{`\r\n        @keyframes float-spin {\r\n          0% { transform: translateY(0) rotate(0deg); }\r\n          50% { transform: translateY(-30px) rotate(10deg); }\r\n          100% { transform: translateY(0) rotate(0deg); }\r\n        }\r\n        .animate-float-spin {\r\n          animation: float-spin 4s ease-in-out infinite;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GrammarChecker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}