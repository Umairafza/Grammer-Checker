{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umair\\\\Music\\\\grammar-app\\\\frontend\\\\src\\\\components\\\\GrammarChecker.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GrammarChecker() {\n  _s();\n  const [text, setText] = useState('');\n  const [corrections, setCorrections] = useState([]);\n  const [correctedSentence, setCorrectedSentence] = useState('');\n  const [noCorrections, setNoCorrections] = useState(false);\n  const handleCheckGrammar = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/check-grammar', {\n        text\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      // Split and filter out empty lines\n      const lines = response.data.corrections.split('\\n').map(l => l.trim()).filter(Boolean);\n      if (lines.length === 0 || lines[0] === 'No corrections needed') {\n        setNoCorrections(true);\n        setCorrections([]);\n        setCorrectedSentence('');\n      } else {\n        setNoCorrections(false);\n        setCorrectedSentence(lines[0]);\n        const correctionList = lines.slice(1).map(c => {\n          const [original, corrected] = c.split(' -> ');\n          return {\n            original: original === null || original === void 0 ? void 0 : original.trim(),\n            corrected: corrected === null || corrected === void 0 ? void 0 : corrected.trim()\n          };\n        }).filter(c => c.original && c.corrected);\n        setCorrections(correctionList);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Highlight incorrect words in the input text (preview) in bold red\n  const highlightInput = () => {\n    let highlighted = text;\n    corrections.forEach(({\n      original\n    }) => {\n      if (original) {\n        // Use word boundaries to only match the word\n        const regex = new RegExp(`\\\\b${original}\\\\b`, 'gi');\n        highlighted = highlighted.replace(regex, `<span style=\"color: red; font-weight: bold;\">${original}</span>`);\n      }\n    });\n    return highlighted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center p-4 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Grammar Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), corrections.length > 0 && !noCorrections && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl p-4 border rounded bg-white mb-2\",\n      dangerouslySetInnerHTML: {\n        __html: highlightInput()\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      className: \"w-full max-w-2xl h-40 p-4 border rounded mb-4\",\n      placeholder: \"Enter your text here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCheckGrammar,\n      className: \"bg-blue-500 text-white p-2 rounded hover:bg-blue-600 mb-4\",\n      children: \"Check Grammar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl p-4 border rounded bg-white min-h-[3rem]\",\n      children: noCorrections ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-green-600 font-semibold\",\n        children: \"No corrections needed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: correctedSentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(GrammarChecker, \"XV+ENvVjTD7WIdUwbtFN3ydX2rM=\");\n_c = GrammarChecker;\nexport default GrammarChecker;\nvar _c;\n$RefreshReg$(_c, \"GrammarChecker\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","GrammarChecker","_s","text","setText","corrections","setCorrections","correctedSentence","setCorrectedSentence","noCorrections","setNoCorrections","handleCheckGrammar","response","post","headers","Authorization","localStorage","getItem","lines","data","split","map","l","trim","filter","Boolean","length","correctionList","slice","c","original","corrected","err","console","error","highlightInput","highlighted","forEach","regex","RegExp","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umair/Music/grammar-app/frontend/src/components/GrammarChecker.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nfunction GrammarChecker() {\n  const [text, setText] = useState('');\n  const [corrections, setCorrections] = useState([]);\n  const [correctedSentence, setCorrectedSentence] = useState('');\n  const [noCorrections, setNoCorrections] = useState(false);\n\n  const handleCheckGrammar = async () => {\n    try {\n      const response = await axios.post(\n        'http://localhost:5000/check-grammar',\n        { text },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }\n      );\n      // Split and filter out empty lines\n      const lines = response.data.corrections.split('\\n').map(l => l.trim()).filter(Boolean);\n      if (lines.length === 0 || lines[0] === 'No corrections needed') {\n        setNoCorrections(true);\n        setCorrections([]);\n        setCorrectedSentence('');\n      } else {\n        setNoCorrections(false);\n        setCorrectedSentence(lines[0]);\n        const correctionList = lines.slice(1).map(c => {\n          const [original, corrected] = c.split(' -> ');\n          return { original: original?.trim(), corrected: corrected?.trim() };\n        }).filter(c => c.original && c.corrected);\n        setCorrections(correctionList);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Highlight incorrect words in the input text (preview) in bold red\n  const highlightInput = () => {\n    let highlighted = text;\n    corrections.forEach(({ original }) => {\n      if (original) {\n        // Use word boundaries to only match the word\n        const regex = new RegExp(`\\\\b${original}\\\\b`, 'gi');\n        highlighted = highlighted.replace(\n          regex,\n          `<span style=\"color: red; font-weight: bold;\">${original}</span>`\n        );\n      }\n    });\n    return highlighted;\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center p-4 bg-gray-100\">\n      <h2 className=\"text-2xl font-bold mb-6\">Grammar Checker</h2>\n      {/* Preview with incorrect words highlighted */}\n      {corrections.length > 0 && !noCorrections && (\n        <div\n          className=\"w-full max-w-2xl p-4 border rounded bg-white mb-2\"\n          dangerouslySetInnerHTML={{ __html: highlightInput() }}\n        />\n      )}\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        className=\"w-full max-w-2xl h-40 p-4 border rounded mb-4\"\n        placeholder=\"Enter your text here...\"\n      />\n      <button\n        onClick={handleCheckGrammar}\n        className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600 mb-4\"\n      >\n        Check Grammar\n      </button>\n      <div\n        className=\"w-full max-w-2xl p-4 border rounded bg-white min-h-[3rem]\"\n      >\n        {noCorrections ? (\n          <span className=\"text-green-600 font-semibold\">No corrections needed!</span>\n        ) : (\n          <span>{correctedSentence}</span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GrammarChecker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}